buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.4.0'
    }
}

apply plugin: 'com.android.application'

repositories {
    google()
    mavenCentral()
}

dependencies {
    def room_version = "2.4.3"

    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation "androidx.room:room-runtime:${room_version}"
    annotationProcessor "androidx.room:room-compiler:${room_version}"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
        'main',     // main sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process

android {
    namespace 'com.example.android.wifirttscan'  // âœ… change this to your real package name
    compileSdkVersion 34

    defaultConfig {
        minSdkVersion 28
        targetSdkVersion 34
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    lint {
        abortOnError false
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

}
